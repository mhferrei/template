apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: v1beta3-demo
  title: SAP CI Iflow
  description: Scaffolder SAP Cloud Integration Iflow
spec:
  owner: marcoshferreira/sap-ci
  type: service

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Fill in some steps
      required:
        - packageId
        - iflowId
        - description
      properties:
        packageId:
          title: Package ID
          type: string
          description: Package ID
          ui:autofocus: true
          ui:options:
            rows: 5
        iflowId:
          title: Iflow ID
          type: string
          description: Iflow ID
          ui:options:
            rows: 5
        description:
          title: Description
          type: string
          description: Iflow description
          ui:options:
            rows: 5
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: template
      name: Fetch skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          iflowId: ${{ parameters.iflowId }}
          packageId: ${{ parameters.packageId }}
          description: ${{ parameters.description }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.iflowId }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
